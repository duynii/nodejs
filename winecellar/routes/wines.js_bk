
var mongo = require('mongodb');

var Server = mongo.Server,
    Db = mongo.Db,
    BSON = mongo.BSONPure;

var server = new Server('localhost', 27017, {auto_reconnect: true});

db = new Db('winedb', server, {safe: true});
db.open(function(err, db) 
{
    if(!err)
    {
        console.log("Connected to 'winedb' database");
        // Attempt collection access
        db.collection('wines',  {safe: true}, function(err, collection) {
            if(err)
            {
                // No such collection so create it
                console.log("'winedb' collection does not exist, creating...");
                populateDB();
            }
        });
    }
});

exports.findAll = function(req, res) {

    console.log("Showing all wines...");
    db.collection('wines', function(err, collection) {
        collection.find().toArray(function(err, item) {
            res.send(item);
        });
    });
    //res.send([{name:'wine1'}, {name:'wine2'}, {name:'wine3'}]);
};

exports.findById = function(req, res) {
    // Get id from URL
    var id = req.params.id;
    console.log("Retrieving wine: " + id);

    db.collection('wines', function(err, collection) {
        collection.findOne({'_id': new BSON.ObjectID(id)}, function(err, item) {
            res.send(item);
        });
    });
    
    //res.send({id:req.params.id, name: "The Name", description: "description"});
};

exports.addWine = function(req, res) {
        var wine = req.body;
        console.log("Add wine: " + JSON.stringify(wine));

        // Validate input
        if(undefined(wine)) {
            res.send('Error: wine is undefined');
        }

        db.collection('wines', function(err, collection) {
            collection.insert(wine, {safe:true}, function(err, result) {
                if(err) {
                    res.send('error: an error has occured ' + err + ' - ' + wine);
                }
                else
                {
                    console.log("Sucess: " + JSON.stringify(result[0]));
                    res.send(result[0]);
                }
            });
        });
};

exports.updateWine = function(req, res) {
    var id = req.params.id;
    var wine = req.body;
    console.log('Updating wine: ' + id);
    console.log(JSON.stringify(wine));
    db.collection('wines', function(err, collection) {
        collection.update({'_id':new BSON.ObjectID(id)}, wine, {safe:true}, function(err, result) {
            if (err) 
            {
                console.log('Error updating wine: ' + err);
                res.send({'error':'An error has occurred'});
            } else {
                console.log('' + result + ' document(s) updated');
                res.send(wine);
            }
        });
    });
}

exports.deleteWine = function(req, res) {
    var id = req.params.id;
    console.log('Deleting wine: ' + id);
    db.collection('wines', function(err, collection) {
        collection.remove({'_id':new BSON.ObjectID(id)}, {safe:true}, function(err, result) {
            if (err) {
                res.send({'error':'An error has occurred - ' + err});
            } else {
                console.log('' + result + ' document(s) deleted');
                res.send(req.body);
            }
        });
    });
}


// Insert some wines
/*--------------------------------------------------------------------------------------------------------------------*/
// Populate database with sample data -- Only used once: the first time the application is started.
// You'd typically not find this code in a real-life app, since the database would already exist.
var populateDB = function() {

    var wines = [
    {
        name: "CHATEAU DE SAINT COSME",
        year: "2009",
        grapes: "Grenache / Syrah",
        country: "France",
        region: "Southern Rhone",
        description: "The aromas of fruit and spice...",
        picture: "saint_cosme.jpg"
    },
    {
        name: "LAN RIOJA CRIANZA",
        year: "2006",
        grapes: "Tempranillo",
        country: "Spain",
        region: "Rioja",
        description: "A resurgence of interest in boutique vineyards...",
        picture: "lan_rioja.jpg"
    }];

    db.collection('wines', function(err, collection) {
        collection.insert(wines, {safe:true}, function(err, result) {});
    });

};
